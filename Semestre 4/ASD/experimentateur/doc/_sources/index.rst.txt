---------------
Experimentateur
---------------


.. toctree::
   :maxdepth: 1

   experience.rst
   marker.rst
   
~~~~~~~~~~
Etat du TP
~~~~~~~~~~

Stratégie 1 terminée

~~~~~~~~~~~~~~~~~~~~~~
Réponses aux questions
~~~~~~~~~~~~~~~~~~~~~~

1.2.2

Pour étudier la complexité de cet algorithme , l'opération que nous pouvons compter et le nombre d'utilisation de la fonction compare.

1.2.3

Cet algorithme sors de la boucle de comparaison lorsque le marquer recherché a été trouvé dans la liste positive. Ainsi le pire de cas et celui ou aucun des marqueurs ne se trouve dans la liste positive.

1.2.4

Si on a m la longeur de la liste de marqueur et p la longeur de la liste de positif, alors dans le pire de cas le nombre d'occurence de OP et m*p.


1.3.2

Le pire des cas est celui ou aucun des marqueurs ne se trouve dans la liste positive
dans le pire des cas, le nombre de comparaison sera de m*log2(p)

1.4.2 

Le pire des cas est celui ou aucun des marqueurs ne se trouve dans la liste positive. Dans ce cas, le nombre de comparaison sera de m*p

1.5.6

.. image:: ../out/10.png
.. image:: ../out/20.png
.. image:: ../out/30.png
.. image:: ../out/40.png
.. image:: ../out/50.png
.. image:: ../out/60.png
.. image:: ../out/70.png
.. image:: ../out/80.png
.. image:: ../out/90.png
.. image:: ../out/100.png









